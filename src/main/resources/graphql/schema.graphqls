type User {
    id: ID!
    firstName: String
    lastName: String
    age: Int
    phoneNumber: String
    email: String
    roles: [Role]
}

type Role {
    id: ID
    name: String
}

input RoleInput {
    id: ID
    name: String
}

input UserInput {
    firstName: String!
    lastName: String
    age: Int
    phoneNumber: String
    email: String!
    roles: [RoleInput]
}

type Query {
    getUser(email: String!): User
    getListAllUsers: [User]
    getRoleByName(name: String): Role
}

type Mutation {
    createUser(user: UserInput!): User
    createRole(role: RoleInput!): Role
    updateUser(id: ID!, user: UserInput!, role: RoleInput): User
    deleteUser(id: ID!): Boolean
}
